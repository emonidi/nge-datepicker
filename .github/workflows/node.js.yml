# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.13]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build --if-present -- --project=nge-datepicker 
    - run: cd ./dist/nge-datepicker && npm publish --access public
      env: 
        NPM_TOKEN : ${{secrets.NPM_TOKEN}}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    # - name: NPM Publish V2
    #   # You may pin to the exact commit or the version.
    #   # uses: bluecargo/npm-publish@460607489cab22841696e500d41e1c388ce757a0
    #   uses: bluecargo/npm-publish@v2
    #   with:
    #     # The NPM access token to use when publishing
    #     token: ${{ secrets.NPM_TOKEN }}
    #     # The NPM registry URL to use
    #     # registry: # optional, default is https://registry.npmjs.org/
    #     # The path of your package.json file
    #     package: ./dist/nge-datepicker/package.json # optional, default is package.json
    #     # The tag to publish to. This allows people to install the package using "npm install <package-name>@<tag>".
    #     # tag: # optional, default is latest
    #     # Determines whether the published package should be publicly visible, or restricted to members of your NPM organization. This only applies to scoped packages.
    #     # access: # optional
    #     # If true, run with the --dry-run flag
    #     # dry-run: true # optional, default is false
    #     # Only publish if the version in package.json differs from the latest on NPM
    #     # check-version: # optional, default is true
              
            
